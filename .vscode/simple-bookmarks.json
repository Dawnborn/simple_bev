[{"label":"rgb to (-0.5,0.5)","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/train_nuscenes.py","lineNumber":111,"text":"    rgb_camXs = rgb_camXs - 0.5 # go to -0.5, 0.5","group":"rgb->rgb features","isExpanded":false},{"label":"rgb feed in","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/train_nuscenes.py","lineNumber":180,"text":"            rgb_camXs=rgb_camXs,","group":"rgb->rgb features","isExpanded":false},{"label":"rgb feed in src","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/bevformernet.py","lineNumber":468,"text":"    def forward(self, rgb_camXs, pix_T_cams, cam0_T_camXs, vox_util, rad_occ_mem0=None):","group":"rgb->rgb features","isExpanded":false},{"label":"rgb encoder definition","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/bevformernet.py","lineNumber":419,"text":"        # Encoder","group":"rgb->rgb features","isExpanded":false},{"label":"rgb encoder call","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/bevformernet.py","lineNumber":487,"text":"        # rgb encoder","group":"rgb->rgb features","isExpanded":false},{"label":"rgb normalize?","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/bevformernet.py","lineNumber":489,"text":"rgb_camXs_ = (rgb_camXs_ + 0.5 - self.mean.to(device)) / self.std.to(device) # normalize the rgb values","group":"rgb->rgb features","isExpanded":false},{"label":"rgb features","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/bevformernet.py","lineNumber":494,"text":"        feat_camXs_ = self.encoder(rgb_camXs_)","group":"rgb->rgb features","isExpanded":false},{"label":"image locations","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/bevformernet.py","lineNumber":504,"text":"        # compute the image locations (no flipping for now)","group":"coordinates","isExpanded":false},{"label":"grid from 0-X/Y/Z","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/bevformernet.py","lineNumber":505,"text":"        xyz_mem_ = utils.basic.gridcloud3d(B0, Z, Y, X, norm=False, device=rgb_camXs.device) # B0, Z*Y*X, 3","group":"coordinates","isExpanded":false},{"label":"Mem2Ref","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/bevformernet.py","lineNumber":507,"text":"xyz_cam0_ = vox_util.Mem2Ref(xyz_mem_, Z, Y, X, assert_cube=False)","group":"coordinates","isExpanded":false},{"label":"Mem2Ref src","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/utils/vox.py","lineNumber":59,"text":"    def Mem2Ref(self, xyz_mem, Z, Y, X, assert_cube=False):","group":"coordinates","isExpanded":false},{"label":"project to image","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/bevformernet.py","lineNumber":511,"text":"xy_camXs_ = utils.geom.camera2pixels(xyz_camXs_, pix_T_cams_) # B0, N, 2, where N=Z*Y*X","group":"coordinates","isExpanded":false},{"label":"reference camera points","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/bevformernet.py","lineNumber":513,"text":"reference_points_cam = xy_camXs_.reshape(B, S, Z, Y, X, 2).permute(1, 0, 2, 4, 3, 5).reshape(S, B, Z*X, Y, 2) # 6, 1, 200*200, 8, 2,","group":"coordinates","isExpanded":false},{"label":"dataflow_bevformer","lineNumber":-1,"isExpanded":true},{"label":"rgb->rgb features","lineNumber":-1,"group":"dataflow_bevformer","isExpanded":true},{"label":"coordinates","lineNumber":-1,"group":"dataflow_bevformer","isExpanded":true},{"label":"kqv","lineNumber":-1,"group":"dataflow_bevformer","isExpanded":true},{"label":"feat_bev:=bev_queries","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/bevformernet.py","lineNumber":553,"text":"        feat_bev = bev_queries.permute(0, 2, 1).reshape(B, self.latent_dim, self.Z, self.X)","group":"dataflow_bevformer","isExpanded":false},{"label":"decoder(feat_bev)","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/bevformernet.py","lineNumber":562,"text":"        out_dict = self.decoder(feat_bev, (self.bev_flip1_index, self.bev_flip2_index) if self.rand_flip else None)","group":"dataflow_bevformer","isExpanded":false},{"label":"src: decoder","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/bevformernet.py","lineNumber":112,"text":"    def forward(self, x, bev_flip_indices=None):","group":"dataflow_bevformer","isExpanded":false},{"label":"q randomly initialized","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/bevformernet.py","lineNumber":432,"text":"        self.bev_queries = nn.Parameter(0.1*torch.randn(latent_dim, Z, X)) # C, Z, X","group":"kqv","isExpanded":false},{"label":"q_pos randomly initialized","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/bevformernet.py","lineNumber":433,"text":"        self.bev_queries_pos = nn.Parameter(0.1*torch.randn(latent_dim, Z, X)) # C, Z, X","group":"kqv","isExpanded":false},{"label":"q self attention","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/bevformernet.py","lineNumber":532,"text":"            bev_queries = self.self_attn_layers[i](bev_queries, bev_queries_pos)","group":"kqv","isExpanded":false},{"label":"src: q self attention","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/bevformernet.py","lineNumber":298,"text":"    def forward(self, query, query_pos=None):","group":"kqv","isExpanded":false},{"label":"q cross attention across images","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/bevformernet.py","lineNumber":538,"text":"            bev_queries = self.cross_attn_layers[i](bev_queries, bev_keys, bev_keys, ","group":"kqv","isExpanded":false},{"label":"@ q cross attention across images","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/bevformernet.py","lineNumber":341,"text":"    def forward(self, query, key, value, query_pos=None, reference_points_cam=None, spatial_shapes=None, bev_mask=None):","group":"kqv","isExpanded":false},{"label":"@@ deformable attention","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/bevformernet.py","lineNumber":382,"text":"        queries = self.deformable_attention(query=queries_rebatch.view(B*S, max_len, self.dim),","group":"kqv","isExpanded":false},{"label":"@@@ deformable attention","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/ops/modules/ms_deform_attn.py","lineNumber":211,"text":"    def forward(self,","group":"kqv","isExpanded":false},{"label":"@@@@ sampling offsets from queries","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/ops/modules/ms_deform_attn.py","lineNumber":276,"text":"        sampling_offsets = self.sampling_offsets(query).view(","group":"kqv","isExpanded":false},{"label":"@@@@@","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/ops/modules/ms_deform_attn.py","lineNumber":181,"text":"        self.sampling_offsets = nn.Linear(","group":"kqv","isExpanded":false},{"label":"@@@@ sampling locations","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/ops/modules/ms_deform_attn.py","lineNumber":305,"text":"            sampling_locations = reference_points + sampling_offsets","group":"kqv","isExpanded":false},{"label":"@@@@ multi-scale deformable attention","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/ops/modules/ms_deform_attn.py","lineNumber":323,"text":"        output = MSDeformAttnFunction.apply(","group":"kqv","isExpanded":false},{"label":"@@@@@ ms_deform_attn_cuda_forward","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/ops/src/cuda/ms_deform_attn_cuda.cu","lineNumber":19,"text":"at::Tensor ms_deform_attn_cuda_forward(","group":"kqv","isExpanded":false},{"label":"q through norm+ffn+norm","filePath":"/data/hdd1/storage/junpeng/ws_simplebev/simple_bev/nets/bevformernet.py","lineNumber":545,"text":"            bev_queries = self.norm2_layers[i](bev_queries)","group":"kqv","isExpanded":false}]